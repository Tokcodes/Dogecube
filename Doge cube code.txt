print("Best of luck to you and have fun! ^^")
import pygame
import random
import sys

pygame.init()

#screen
WIDTH = 800
HEIGHT = 600
screen = pygame.display.set_mode((WIDTH, HEIGHT))

#colors
PURPLE = (128, 0, 128)
BLUE = (0, 0, 255)
RED = (255,0,100)
BACKGROUND_COLOR = (0,0,0)

#player
player_size = 50
player_pos = [WIDTH/2, HEIGHT-2*player_size]

#enemy
enemy_size = 50
enemy_pos = [random.randint(0,WIDTH-enemy_size), 0]
enemy_list = [enemy_pos]

#game stuff
SPEED = 10
game_over = False
score = 0
clock = pygame.time.Clock()
myFont = pygame.font.SysFont("monospace", 35)
mv_sound = pygame.mixer.Sound('Assets/move.wav')
pygame.mixer.music.load('Assets/music.wav')
pygame.mixer.music.play(-1)
pygame.mixer.music.set_volume(0.5)
background = pygame.image.load('Assets/screen1.png')
pygame.display.set_caption('Doge cubes!')
def set_level(score, SPEED):
    if score < 20:
        SPEED = 5
    elif score < 40:
        SPEED = 8
    elif score < 60:
        SPEED = 12
    elif score < 80:
        SPEED = 15
    elif score < 100:
        SPEED = 18
    elif score < 120:
        SPEED = 21
    elif score < 140:
        SPEED = 24
    elif score < 160:
        SPEED = 27
    elif score < 180:
        SPEED = 30
    elif score < 200:
        SPEED = 33
    elif score < 220:
        SPEED = 36
    elif score < 240:
        SPEED = 39
    elif score < 260:
        SPEED = 42
    else:
        SPEED = 50
    return SPEED

def drop_enemies(enemy_list):
    delay = random.random()
    if len(enemy_list) < 10 and delay < 0.1:
        x_pos = random.randint(0,WIDTH-enemy_size)
        y_pos = 0
        enemy_list.append([x_pos, y_pos])

def draw_enemies(enemy_list):
    for enemy_pos in enemy_list:
        pygame.draw.rect(screen, PURPLE, (enemy_pos[0], enemy_pos[1], enemy_size, enemy_size))

def update_enemy_positions(enemy_list, score):
    for idx, enemy_pos in enumerate(enemy_list):
        if 0 <= enemy_pos[1] < HEIGHT:
            enemy_pos[1] += SPEED
        else:
            enemy_list.pop(idx)
            score += 1
    return score

def collision_check(enemy_list, player_pos):
    for enemy_pos in enemy_list:
        if detect_collision(enemy_pos, player_pos):
            return True
    return False

def detect_collision(player_pos, enemy_pos):
    p_x = player_pos[0]
    p_y = player_pos[1]

    e_x = enemy_pos[0]
    e_y = enemy_pos[1]

    if (p_x <= e_x < (p_x + player_size)) or (e_x <= p_x < (e_x + enemy_size)):
        if (p_y <= e_y < (p_y + player_size)) or (e_y <= p_y < (e_y + enemy_size)):
            return True
    return False

while not game_over:

    for event in pygame.event.get():
        if event.type == pygame.QUIT:
            sys.exit()

        if event.type == pygame.KEYDOWN:
            x = player_pos[0]
            y = player_pos[1]

            if event.key == pygame.K_LEFT:
                pygame.mixer.Sound.play(mv_sound)
                x -= player_size
            elif event.key == pygame.K_RIGHT:
                pygame.mixer.Sound.play(mv_sound)
                x += player_size

            player_pos = [x,y]

    screen.blit(background, (0, 0))

    drop_enemies(enemy_list)
    score = update_enemy_positions(enemy_list, score)
    SPEED = set_level(score, SPEED)

    text = "Score:" + str(score)
    label = myFont.render(text, 1, RED)
    screen.blit(label, (WIDTH-200, HEIGHT-40))

    if collision_check(enemy_list, player_pos):
        game_over = True
        break

    draw_enemies(enemy_list)

    pygame.draw.rect(screen, BLUE, (player_pos[0], player_pos[1], player_size, player_size))

    clock.tick(30)

    pygame.display.update()